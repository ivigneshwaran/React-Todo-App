{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleChange","bind","handleSubmit","e","this","setState","target","name","value","preventDefault","createTodo","id","uuidv4","completed","className","onSubmit","htmlFor","type","placeholder","onChange","required","Component","Todo","isEditing","handleRemove","toggleForm","handleUpdate","toggleCompleted","removeTodo","updateTodo","toggleTodo","onClick","class","TodoList","todos","create","remove","update","toggleCompletion","newTodo","filter","t","updatedTask","updatedTodos","map","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d967e20d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./NewTodoForm.css\"\r\n\r\nexport default class NewTodoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.createTodo({ ...this.state, id: uuidv4(), completed: false });\r\n    this.setState({\r\n      task: \"\",\r\n    });\r\n  }\r\n  handleClick(e) {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"task\">New Todo</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"New Todo\"\r\n            id=\"task\"\r\n            name=\"task\"\r\n            value={this.state.task}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <button>Add Todo</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nexport default class Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      task: this.props.task,\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.toggleCompleted = this.toggleCompleted.bind(this);\r\n  }\r\n  handleRemove() {\r\n    this.props.removeTodo(this.props.id);\r\n  }\r\n  toggleForm() {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n  handleUpdate(e) {\r\n    e.preventDefault();\r\n    // take new task data and update it to the parent\r\n    this.props.updateTodo(this.props.id, this.state.task);\r\n    // this.state.isEditing = false;\r\n    this.toggleForm();\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  toggleCompleted(id) {\r\n    this.props.toggleTodo(this.props.id);\r\n  }\r\n  render() {\r\n    let result;\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <div className=\"Todo\">\r\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.task}\r\n              name=\"task\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <button>Save</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      result = (\r\n        <div className=\"Todo\">\r\n          <li\r\n            className={\r\n              this.props.completed ? \"Todo-task completed\" : \"Todo-task\"\r\n            }\r\n            onClick={this.toggleCompleted}\r\n          >\r\n            {this.props.task}\r\n          </li>\r\n          <div className=\"Todo-buttons\">\r\n            <button onClick={this.toggleForm}>\r\n              <i class=\"fas fa-pen\" />\r\n            </button>\r\n            <button onClick={this.handleRemove}>\r\n              <i class=\"fas fa-trash\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport Todo from \"./Todo\";\r\nimport \"./TodoList.css\"\r\n\r\nexport default class TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n    };\r\n    this.create = this.create.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.toggleCompletion = this.toggleCompletion.bind(this);\r\n  }\r\n  create(newTodo) {\r\n    this.setState({\r\n      todos: [...this.state.todos, newTodo],\r\n    });\r\n  }\r\n  remove(id) {\r\n    this.setState({\r\n      todos: this.state.todos.filter((t) => t.id !== id),\r\n    });\r\n  }\r\n  update(id, updatedTask) {\r\n    const updatedTodos = this.state.todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: updatedTask };\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({ todos: updatedTodos });\r\n  }\r\n  toggleCompletion(id) {\r\n    const updatedTodos = this.state.todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({ todos: updatedTodos });\r\n  }\r\n  render() {\r\n    const todos = this.state.todos.map((todo) => {\r\n      return (\r\n        <Todo\r\n          key={todo.id}\r\n          id={todo.id}\r\n          completed={todo.completed}\r\n          task={todo.task}\r\n          removeTodo={this.remove}\r\n          updateTodo={this.update}\r\n          toggleTodo={this.toggleCompletion}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TodoList\">\r\n        <h1>Todo List! <span>A Simple React Todo List App</span></h1>\r\n        <ul>{todos}</ul>\r\n        <NewTodoForm createTodo={this.create} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport TodoList from \"./TodoList\"\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}